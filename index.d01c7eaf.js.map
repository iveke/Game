{"mappings":"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","sources":["src/index.js"],"sourcesContent":["const canvas = document.getElementById('canvas1');\nconst ctx1 = canvas.getContext('2d');\ncanvas.width = 800;\ncanvas.height = 600;\n\nconst canvas2 = document.getElementById('canvas2');\nconst ctx2 = canvas2.getContext('2d');\ncanvas2.width = 800;\ncanvas2.height = 600;\n\nconst canvas3 = document.getElementById('canvas3');\nconst ctx3 = canvas3.getContext('2d');\ncanvas3.width = 800;\ncanvas3.height = 600;\n\nconst canvas4 = document.getElementById('canvas4');\nconst ctx4 = canvas4.getContext('2d');\ncanvas4.width = 800;\ncanvas4.height = 600;\n\nconst canvas5 = document.getElementById('canvas5');\nconst ctx5 = canvas5.getContext('2d');\ncanvas5.width = 800;\ncanvas5.height = 600;\n\n// global variables\nconst grid = 80;\nlet keys = [];\nlet score = 0;\nlet collisionCount = 0;\nlet frame = 0;\nlet gameSpeed = 1;\nlet safe = false;\nconst particlesArray = [];\nconst maxParticles = 300;\nconst ripplesArray = [];\nconst carsArray = [];\nconst logsArray = [];\n\n\n// Image\nconst log = document.getElementById(\"log\");\nconst car = document.getElementById(\"car\");\nconst collisions = document.getElementById(\"collisions\");\nconst background_lvl2 = document.getElementById(\"background\");\nconst froggerSprite = document.getElementById(\"frogger\");\nlet numberOfCars = 3;\n\n\nclass Frogger {\n    constructor() {\n        this.spriteWidth = 250;\n        this.spriteHeight = 250;\n        this.width = this.spriteWidth / 5;\n        this.height = this.spriteHeight / 5;\n        this.x = canvas.width / 2 - this.width / 5;\n        this.y = canvas.height - this.height - 40;\n        this.moving = false;\n        this.frameX = 0;\n        this.frameY = 0;\n    }\n    update() {\n        if (keys[38]) {\n            if (this.moving === false) { //up\n                this.y -= grid;\n                this.moving = true;\n                this.frameX = 1;\n                this.frameY = 0;\n\n            }\n        }\n        if (keys[40]) { //down\n            if (this.y < canvas.height - this.height * 2 && this.moving === false) { //up\n                this.y += grid;\n                this.moving = true;\n                this.frameY = 3;\n            }\n        }\n        if (keys[37]) { //left\n            if (this.x > this.width && this.moving === false) { //up\n                this.x -= grid;\n                this.moving = true;\n                this.frameY = 2;\n            }\n        }\n        if (keys[39]) { //right\n            if (this.x < canvas.width - this.width * 2 && this.moving === false) { //up\n                this.x += grid;\n                this.moving = true;\n                this.frameY = 1;\n            }\n        }\n        if (this.y < 0) scored();\n    }\n    draw() {\n        ctx3.fillStyle = 'green';\n        // ctx3.fillRect(this.x, this.y, this.width, this.height);\n        ctx3.drawImage(froggerSprite, this.frameX * this.spriteWidth, this.frameY * this.spriteHeight, this.spriteWidth, this.spriteHeight, this.x - 25, this.y - 25, this.width * 2, this.height * 2)\n    }\n    jump() {\n        console.log(this.frameX);\n        if (this.moving === false) this.frameX = 1;\n        else if (this.frameX === 1) this.frameX = 0;\n\n\n    }\n}\n\n//Frogger intalization\nconst frogger = new Frogger();\n\n\nfunction animate() {\n    ctx1.clearRect(0, 0, canvas.width, canvas.height);\n    ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n    ctx3.clearRect(0, 0, canvas3.width, canvas3.height);\n    ctx4.clearRect(0, 0, canvas4.width, canvas4.height);\n    ctx5.clearRect(0, 0, canvas5.width, canvas5.height)\n    frogger.draw();\n    frogger.update();\n    ctx1.drawImage(background_lvl2, 0, 0, canvas.width, canvas.height);\n    handleObstacles();\n    handleScoreBoard();\n    requestAnimationFrame(animate);\n\n}\n\n\nanimate()\n\n\n// event listener\nwindow.addEventListener('keydown', (e) => {\n    keys = [];\n    keys[e.keyCode] = true;\n    if (keys[37] || keys[38] || keys[39] || keys[40]) {\n        frogger.jump();\n    }\n})\n\nwindow.addEventListener('keyup', (e) => {\n    delete keys[e.keyCode];\n    frogger.moving = false;\n    frogger.frameX = 0;\n})\n\nfunction scored() {\n    score++;\n    gameSpeed += 0.5;\n    frogger.x = canvas.width / 2 - frogger.width / 2;\n    frogger.y = canvas.height - frogger.height - 40;\n}\n\nfunction handleScoreBoard() {\n    ctx4.fillStyle = \"black\";\n    ctx4.strokeStyle = \"black\";\n    ctx4.font = \"15px Verdana\";\n    ctx4.strokeText(\"Score\", 265, 15);\n    ctx4.font = \"60px Verdana\";\n    ctx4.fillText(score, 270, 65);\n    ctx4.font = \"18px Verdana\";\n    ctx4.strokeText(\"Collisions \" + collisionCount, 10, 175);\n    ctx4.strokeText(\"Game Speed \" + gameSpeed.toFixed(1), 10, 195);\n}\n\n\n\n\n\n\nclass Obstacle {\n    constructor(x, y, width, height, speed, type) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.frameX = 0;\n        this.frameY = 0;\n        this.speed = speed;\n        this.type = type;\n        this.carType = (Math.floor((Math.random() * numberOfCars)));\n    }\n    draw() {\n        // ctx1.fillStyle = \"blue\";\n        // ctx1.fillRect(this.x, this.y, this.width, this.height);\n        if (this.type === \"log\") {\n            ctx1.drawImage(log, this.x, this.y, this.width, this.height);\n        } else if (this.type === \"car\") {\n            ctx2.drawImage(car, this.frameX * this.width, this.carType * this.height, grid * 2, grid, this.x, this.y, this.width, this.height);\n        }\n\n    }\n    update() {\n        this.x += Math.round(this.speed * gameSpeed);\n        if (this.speed > 0) {\n\n            if (this.x > canvas.width + this.width) {\n                this.x = 0 - this.width;\n                this.carType = (Math.floor((Math.random() * numberOfCars)));\n            }\n        } else {\n            this.frameX = 1;\n            if (this.x < 0 - this.width) {\n                this.x = canvas.width + this.width;\n                this.carType = (Math.floor((Math.random() * numberOfCars)));\n            }\n        }\n\n    }\n}\n\nfunction initObstacles() {\n    //lane 1\n    for (let i = 0; i < 3; i++) {\n        let x = i * 400;\n        carsArray.push(new Obstacle(x, canvas.height - grid * 2 - 20, grid * 2, grid, 1.5, \"car\"))\n    }\n    //lane 2\n    for (let i = 0; i < 3; i++) {\n        let x = i * 400;\n        carsArray.push(new Obstacle(x, canvas.height - grid * 3 - 20, grid * 2, grid, -2.5, \"car\"))\n    }\n    //lane 3\n    for (let i = 0; i < 2; i++) {\n        let x = i * 600;\n        carsArray.push(new Obstacle(x, canvas.height - grid * 4 - 20, grid * 2, grid, 3.5, \"car\"))\n    }\n    //lane 4\n    for (let i = 0; i < 3; i++) {\n        let x = i * 400;\n        logsArray.push(new Obstacle(x, canvas.height - grid * 5 - 20, grid * 2, grid, -3, \"log\"))\n    }\n    //lane 5\n    for (let i = 0; i < 3; i++) {\n        let x = i * 350;\n        logsArray.push(new Obstacle(x, canvas.height - grid * 6 - 20, grid * 1.3, grid, 2, \"log\"))\n    }\n}\ninitObstacles();\n\nfunction handleObstacles() {\n    for (let i = 0; i < carsArray.length; i++) {\n        carsArray[i].update();\n        carsArray[i].draw();\n    }\n    for (let i = 0; i < logsArray.length; i++) {\n        logsArray[i].update();\n        logsArray[i].draw();\n    }\n\n    //colistion with car\n    for (let i = 0; i < carsArray.length; i++) {\n        if (collision(frogger, carsArray[i])) {\n            // ctx4.drawImage(collisions, 0, 100, 100, frogger.x, frogger.y, 50, 50);\n            resetGame();\n        }\n    }\n\n    //colistion with log\n\n    if (frogger.y < 250 && frogger.y > 100) {\n        safe = false;\n        for (let i = 0; i < logsArray.length; i++) {\n            if ((collision(frogger, logsArray[i]))) {\n                if (logsArray[i].speed < 0) {\n                    frogger.x = frogger.x + (logsArray[i].speed);\n                }\n                else if (logsArray[i].speed > 0) {\n                    frogger.x += logsArray[i].speed;\n                }\n\n                safe = true;\n            }\n        }\n        if (!safe) {\n            resetGame();\n        }\n    }\n}\n\n\nfunction collision(first, second) {\n    return !(first.x > second.width + second.x ||\n        first.x + first.width < second.x ||\n        first.y > second.y + second.height ||\n        first.y + first.height < second.y);\n}\n\n\nfunction resetGame() {\n    frogger.x = canvas.width / 2 - frogger.width / 2;\n    frogger.y = canvas.height - frogger.height - 40;\n    score = 0;\n    collisionCount += 1;\n    gameSpeed = 1;\n\n}"],"names":["$1f0dc3b9307be026$var$canvas","document","getElementById","$1f0dc3b9307be026$var$ctx1","getContext","width","height","$1f0dc3b9307be026$var$canvas2","$1f0dc3b9307be026$var$ctx2","$1f0dc3b9307be026$var$canvas3","$1f0dc3b9307be026$var$ctx3","$1f0dc3b9307be026$var$canvas4","$1f0dc3b9307be026$var$ctx4","$1f0dc3b9307be026$var$canvas5","$1f0dc3b9307be026$var$ctx5","$1f0dc3b9307be026$var$keys","$1f0dc3b9307be026$var$score","$1f0dc3b9307be026$var$collisionCount","$1f0dc3b9307be026$var$gameSpeed","$1f0dc3b9307be026$var$safe","$1f0dc3b9307be026$var$carsArray","$1f0dc3b9307be026$var$logsArray","$1f0dc3b9307be026$var$log","$1f0dc3b9307be026$var$car","$1f0dc3b9307be026$var$background_lvl2","$1f0dc3b9307be026$var$froggerSprite","$1f0dc3b9307be026$var$frogger","update","this","moving","y","frameX","frameY","x","draw","fillStyle","drawImage","spriteWidth","spriteHeight","jump","console","log","constructor","$1f0dc3b9307be026$var$animate","clearRect","i","length","i5","i6","$1f0dc3b9307be026$var$collision","$1f0dc3b9307be026$var$resetGame","speed","$1f0dc3b9307be026$var$handleObstacles","strokeStyle","font","strokeText","fillText","toFixed","requestAnimationFrame","window","addEventListener","e","keyCode","$1f0dc3b9307be026$var$Obstacle","type","carType","$1f0dc3b9307be026$var$grid","Math","round","floor","random","first","second","push","i1","i2","i3","i4","$1f0dc3b9307be026$var$initObstacles"],"version":3,"file":"index.d01c7eaf.js.map"}