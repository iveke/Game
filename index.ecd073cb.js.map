{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","const canvas = document.getElementById('canvas1');\nconst ctx1 = canvas.getContext('2d');\ncanvas.width = 800;\ncanvas.height = 600;\n\nconst canvas2 = document.getElementById('canvas2');\nconst ctx2 = canvas2.getContext('2d');\ncanvas2.width = 800;\ncanvas2.height = 600;\n\nconst canvas3 = document.getElementById('canvas3');\nconst ctx3 = canvas3.getContext('2d');\ncanvas3.width = 800;\ncanvas3.height = 600;\n\nconst canvas4 = document.getElementById('canvas4');\nconst ctx4 = canvas4.getContext('2d');\ncanvas4.width = 800;\ncanvas4.height = 600;\n\nconst canvas5 = document.getElementById('canvas5');\nconst ctx5 = canvas5.getContext('2d');\ncanvas5.width = 800;\ncanvas5.height = 600;\n\n// global variables\nconst grid = 80;\nlet keys = [];\nlet score = 0;\nlet collisionCount = 0;\nlet frame = 0;\nlet gameSpeed = 1;\nlet safe = false;\nconst particlesArray = [];\nconst maxParticles = 300;\nconst ripplesArray = [];\nconst carsArray = [];\nconst logsArray = [];\n\n\n// Image\nconst log = document.getElementById(\"log\");\nconst car = document.getElementById(\"car\");\nconst collisions = document.getElementById(\"collisions\");\nconst background_lvl2 = document.getElementById(\"background\");\nconst froggerSprite = document.getElementById(\"frogger\");\nlet numberOfCars = 3;\n\n\nclass Frogger {\n    constructor() {\n        this.spriteWidth = 250;\n        this.spriteHeight = 250;\n        this.width = this.spriteWidth / 5;\n        this.height = this.spriteHeight / 5;\n        this.x = canvas.width / 2 - this.width / 5;\n        this.y = canvas.height - this.height - 40;\n        this.moving = false;\n        this.frameX = 0;\n        this.frameY = 0;\n    }\n    update() {\n        if (keys[38]) {\n            if (this.moving === false) { //up\n                this.y -= grid;\n                this.moving = true;\n                this.frameX = 1;\n                this.frameY = 0;\n\n            }\n        }\n        if (keys[40]) { //down\n            if (this.y < canvas.height - this.height * 2 && this.moving === false) { //up\n                this.y += grid;\n                this.moving = true;\n                this.frameY = 3;\n            }\n        }\n        if (keys[37]) { //left\n            if (this.x > this.width && this.moving === false) { //up\n                this.x -= grid;\n                this.moving = true;\n                this.frameY = 2;\n            }\n        }\n        if (keys[39]) { //right\n            if (this.x < canvas.width - this.width * 2 && this.moving === false) { //up\n                this.x += grid;\n                this.moving = true;\n                this.frameY = 1;\n            }\n        }\n        if (this.y < 0) scored();\n    }\n    draw() {\n        ctx3.fillStyle = 'green';\n        // ctx3.fillRect(this.x, this.y, this.width, this.height);\n        ctx3.drawImage(froggerSprite, this.frameX * this.spriteWidth, this.frameY * this.spriteHeight, this.spriteWidth, this.spriteHeight, this.x - 25, this.y - 25, this.width * 2, this.height * 2)\n    }\n    jump() {\n        console.log(this.frameX);\n        if (this.moving === false) this.frameX = 1;\n        else if (this.frameX === 1) this.frameX = 0;\n\n\n    }\n}\n\n//Frogger intalization\nconst frogger = new Frogger();\n\n\nfunction animate() {\n    ctx1.clearRect(0, 0, canvas.width, canvas.height);\n    ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n    ctx3.clearRect(0, 0, canvas3.width, canvas3.height);\n    ctx4.clearRect(0, 0, canvas4.width, canvas4.height);\n    ctx5.clearRect(0, 0, canvas5.width, canvas5.height)\n    frogger.draw();\n    frogger.update();\n    ctx1.drawImage(background_lvl2, 0, 0, canvas.width, canvas.height);\n    handleObstacles();\n    handleScoreBoard();\n    requestAnimationFrame(animate);\n\n}\n\n\nanimate()\nconsole.log(\"hello world\");\n\n// event listener\nwindow.addEventListener('keydown', (e) => {\n    keys = [];\n    keys[e.keyCode] = true;\n    if (keys[37] || keys[38] || keys[39] || keys[40]) {\n        frogger.jump();\n    }\n})\n\nwindow.addEventListener('keyup', (e) => {\n    delete keys[e.keyCode];\n    frogger.moving = false;\n    frogger.frameX = 0;\n})\n\nfunction scored() {\n    score++;\n    gameSpeed += 0.1;\n    frogger.x = canvas.width / 2 - frogger.width / 2;\n    frogger.y = canvas.height - frogger.height - 40;\n}\n\nfunction handleScoreBoard() {\n    ctx4.fillStyle = \"black\";\n    ctx4.strokeStyle = \"black\";\n    ctx4.font = \"15px Verdana\";\n    ctx4.strokeText(\"Score\", 265, 15);\n    ctx4.font = \"60px Verdana\";\n    ctx4.fillText(score, 270, 65);\n    ctx4.font = \"18px Verdana\";\n    ctx4.strokeText(\"Collisions \" + collisionCount, 10, 175);\n    ctx4.strokeText(\"Game Speed \" + gameSpeed.toFixed(1), 10, 195);\n}\n\n\n\n\n\n\nclass Obstacle {\n    constructor(x, y, width, height, speed, type) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.frameX = 0;\n        this.frameY = 0;\n        this.speed = speed;\n        this.type = type;\n        this.carType = (Math.floor((Math.random() * numberOfCars)));\n    }\n    draw() {\n        // ctx1.fillStyle = \"blue\";\n        // ctx1.fillRect(this.x, this.y, this.width, this.height);\n        if (this.type === \"log\") {\n            ctx1.drawImage(log, this.x, this.y, this.width, this.height);\n        } else if (this.type === \"car\") {\n            ctx2.drawImage(car, this.frameX * this.width, this.carType * this.height, grid * 2, grid, this.x, this.y, this.width, this.height);\n        }\n\n    }\n    update() {\n        this.x += Math.round(this.speed * gameSpeed);\n        if (this.speed > 0) {\n\n            if (this.x > canvas.width + this.width) {\n                this.x = 0 - this.width;\n                this.carType = (Math.floor((Math.random() * numberOfCars)));\n            }\n        } else {\n            this.frameX = 1;\n            if (this.x < 0 - this.width) {\n                this.x = canvas.width + this.width;\n                this.carType = (Math.floor((Math.random() * numberOfCars)));\n            }\n        }\n\n    }\n}\n\nfunction initObstacles() {\n    //lane 1\n    for (let i = 0; i < 3; i++) {\n        let x = i * 400;\n        carsArray.push(new Obstacle(x, canvas.height - grid * 2 - 20, grid * 2, grid, 1.5, \"car\"))\n    }\n    //lane 2\n    for (let i = 0; i < 3; i++) {\n        let x = i * 400;\n        carsArray.push(new Obstacle(x, canvas.height - grid * 3 - 20, grid * 2, grid, -2.5, \"car\"))\n    }\n    //lane 3\n    for (let i = 0; i < 2; i++) {\n        let x = i * 600;\n        carsArray.push(new Obstacle(x, canvas.height - grid * 4 - 20, grid * 2, grid, 3.5, \"car\"))\n    }\n    //lane 4\n    for (let i = 0; i < 3; i++) {\n        let x = i * 400;\n        logsArray.push(new Obstacle(x, canvas.height - grid * 5 - 20, grid * 2, grid, -3, \"log\"))\n    }\n    //lane 5\n    for (let i = 0; i < 3; i++) {\n        let x = i * 350;\n        logsArray.push(new Obstacle(x, canvas.height - grid * 6 - 20, grid * 1.3, grid, 2, \"log\"))\n    }\n}\ninitObstacles();\n\nfunction handleObstacles() {\n    for (let i = 0; i < carsArray.length; i++) {\n        carsArray[i].update();\n        carsArray[i].draw();\n    }\n    for (let i = 0; i < logsArray.length; i++) {\n        logsArray[i].update();\n        logsArray[i].draw();\n    }\n\n    //colistion with car\n    for (let i = 0; i < carsArray.length; i++) {\n        if (collision(frogger, carsArray[i])) {\n            // ctx4.drawImage(collisions, 0, 100, 100, frogger.x, frogger.y, 50, 50);\n            resetGame();\n        }\n    }\n\n    //colistion with log\n\n    if (frogger.y < 250 && frogger.y > 100) {\n        safe = false;\n        for (let i = 0; i < logsArray.length; i++) {\n            if ((collision(frogger, logsArray[i]))) {\n                if (logsArray[i].speed < 0) {\n                    frogger.x = frogger.x + (logsArray[i].speed);\n                }\n                else if (logsArray[i].speed > 0) {\n                    frogger.x += logsArray[i].speed;\n                }\n\n                safe = true;\n            }\n        }\n        if (!safe) {\n            resetGame();\n        }\n    }\n}\n\n\nfunction collision(first, second) {\n    return !(first.x > second.width + second.x ||\n        first.x + first.width < second.x ||\n        first.y > second.y + second.height ||\n        first.y + first.height < second.y);\n}\n\n\nfunction resetGame() {\n    frogger.x = canvas.width / 2 - frogger.width / 2;\n    frogger.y = canvas.height - frogger.height - 40;\n    score = 0;\n    collisionCount += 1;\n    gameSpeed = 1;\n\n}"],"names":["Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$b8f9b7833fa37166$var$canvas","document","getElementById","$b8f9b7833fa37166$var$ctx1","getContext","width","height","$b8f9b7833fa37166$var$canvas2","$b8f9b7833fa37166$var$ctx2","$b8f9b7833fa37166$var$canvas3","$b8f9b7833fa37166$var$ctx3","$b8f9b7833fa37166$var$canvas4","$b8f9b7833fa37166$var$ctx4","$b8f9b7833fa37166$var$canvas5","$b8f9b7833fa37166$var$ctx5","$b8f9b7833fa37166$var$grid","$b8f9b7833fa37166$var$keys","$b8f9b7833fa37166$var$score","$b8f9b7833fa37166$var$collisionCount","$b8f9b7833fa37166$var$gameSpeed","$b8f9b7833fa37166$var$safe","$b8f9b7833fa37166$var$carsArray","$b8f9b7833fa37166$var$logsArray","$b8f9b7833fa37166$var$log","$b8f9b7833fa37166$var$car","$b8f9b7833fa37166$var$background_lvl2","$b8f9b7833fa37166$var$froggerSprite","$b8f9b7833fa37166$var$frogger","Frogger","this","spriteWidth","spriteHeight","x","y","moving","frameX","frameY","fillStyle","drawImage","console","log","$b8f9b7833fa37166$var$animate","clearRect","draw","update","i5","i6","$b8f9b7833fa37166$var$collision","$b8f9b7833fa37166$var$resetGame","i7","speed","$b8f9b7833fa37166$var$handleObstacles","strokeStyle","font","strokeText","fillText","toFixed","requestAnimationFrame","window","addEventListener","e","keyCode","jump","$b8f9b7833fa37166$var$Obstacle","Obstacle","type","carType","Math","floor","random","round","first","second","push","i1","x1","i2","x2","i3","x3","i4","x4","$b8f9b7833fa37166$var$initObstacles"],"version":3,"file":"index.ecd073cb.js.map"}